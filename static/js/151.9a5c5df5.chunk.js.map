{"version":3,"file":"static/js/151.9a5c5df5.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["//export const selectLoading = state => state.tasks.loading;\n\n//export const selectFilter = state => state.tasks.filter;\n\n//export const selectAllTasks = state => state.tasks.items;\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectValueFilter = state => state.contacts.filter;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { onFilter } from 'redux/contacts/slice';\nimport { selectValueFilter } from 'redux/contacts/selectors';\nimport { FormControl, FormLabel, Input } from '@chakra-ui/react';\n\nexport const Filter = () => {\n  const filter = useSelector(selectValueFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <FormControl\n      as=\"div\"\n      color=\"#D71868\"\n      fontSize=\"16px\"\n      fontFamily=\"Raleway, sans-serif\"\n      fontWeight=\"700\"\n    >\n      <FormLabel\n        as=\"div\"\n        htmlFor=\"filter\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        Find contacts by name\n      </FormLabel>\n      <Input\n        as=\"input\"\n        name=\"filter\"\n        type=\"text\"\n        id=\"filter\"\n        value={filter}\n        onChange={e => dispatch(onFilter(e.currentTarget.value))}\n        border=\"2px\"\n        borderColor=\"#FF9BAA\"\n        borderRadius=\"5px\"\n        bg=\"#FFCBDB\"\n        color=\"#D71868\"\n        outline=\"none\"\n        w=\"256px\"\n      />\n    </FormControl>\n  );\n};\n","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport * as yup from 'yup';\nimport { customAlphabet } from 'nanoid';\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage\n} from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst nanoid = customAlphabet('1234567890abcdef', 10);\n\nlet phoneRegExp =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\nlet nameRegExp = /[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      nameRegExp,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required(),\n  number: yup\n    .string()\n    .matches(\n      phoneRegExp,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n\nconst initualValues = {\n  id: '',\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n console.log(contacts);\n\n const handleSubmit = (values, { resetForm }) => {\n    const newContact = {\n      id: 'id-' + nanoid(),\n      name: values.name,\n      number: values.number,\n    };\n\n    if (contacts.some(contact => contact.name === newContact.name)) {\n      return alert(`Contact ${newContact.name} has already been registrated.`);\n    }\n    dispatch(addContact(newContact));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initualValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormControl\n        as={Form}\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        gap=\"4px\"\n      >\n        <FormLabel\n          htmlFor=\"name\"\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          gap=\"4px\"\n          color=\"#D71868\"\n          fontSize=\"16px\"\n          fontFamily=\"Raleway, sans-serif\"\n          fontWeight=\"700\"\n        >\n          Name\n          <Input\n            as={Field}\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            border=\"2px\"\n            borderColor=\"#FD7B7C\"\n            borderRadius=\"5px\"\n            bg=\"#FFCBDB\"\n            color=\"#D71868\"\n            outline=\"none\"\n            w=\"256px\"\n          />\n          <FormErrorMessage color=\"#DE5D83\" name=\"name\" component=\"div\" />\n        </FormLabel>\n        <FormLabel\n          htmlFor=\"number\"\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          gap=\"4px\"\n          color=\"#D71868\"\n          fontSize=\"16px\"\n          fontFamily=\"Raleway, sans-serif\"\n          fontWeight=\"700\"\n        >\n          Number\n          <Input\n            as={Field}\n            id=\"number\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            border=\"2px\"\n            borderColor=\"#FD7B7C\"\n            borderRadius=\"5px\"\n            bg=\"#FFCBDB\"\n            color=\"#D71868\"\n            outline=\"none\"\n            w=\"256px\"\n          />\n          <FormErrorMessage color=\"#DE5D83\" name=\"number\" component=\"div\" />\n        </FormLabel>\n        <Button\n          as=\"button\"\n          type=\"submit\"\n          border=\"2px\"\n          borderColor=\"#FF9BAA\"\n          borderRadius=\"5px\"\n          bg=\"#FFCBDB\"\n          color=\"#D71868\"\n          fontSize=\"16px\"\n          fontFamily=\"Raleway, sans-serif\"\n          fontWeight=\"400\"\n        >\n          Add contact\n        </Button>\n      </FormControl>\n    </Formik>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  Button,\n Text\n} from '@chakra-ui/react';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  return (\n    <Text\n      as=\"li\"\n      key={id}\n      color=\"#D71868\"\n      fontSize=\"16px\"\n      fontFamily=\"Raleway, sans-serif\"\n      fontWeight=\"400\"\n    >\n      {name}:<span>{number}</span>\n      <Button\n        as=\"button\"\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(id))}\n        border=\"2px\"\n        borderColor=\"#FF9BAA\"\n        bg=\"#FFCBDB\"\n        color=\"#D71868\"\n        m=\"0 auto\"\n      >\n        Delete\n      </Button>\n    </Text>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Contact } from 'components/Contact/Contact';\nimport { Box } from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectValueFilter, selectContacts } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectValueFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  console.log(contacts);\n\n  const filteredContacts = filter\n    ? contacts.filter(({ name }) =>\n        name.toLowerCase().includes(filter.toLowerCase().trim())\n      )\n    : contacts;\n\n  return (\n    <Box as=\"ul\" alignItems=\"center\" listStyleType=\"none\">\n      {filteredContacts.map(({ id, name, number }) => {\n        return <Contact key={id} id={id} name={name} number={number} />;\n      })}\n    </Box>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { Filter } from 'components/Filter';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { AiOutlineApple } from 'react-icons/ai';\nimport { AiOutlineUsergroupAdd } from 'react-icons/ai';\nimport { Box, Flex, Heading } from '@chakra-ui/react';\n\nexport default function Contacts() {\n  return (\n    <Box\n      as=\"div\"\n      w=\"512px\"\n      h=\"700px\"\n      bg=\"linear-gradient(45deg, #E28090, #FADADD, #FDBDBA)\"\n      p=\"16px\"\n      textAlign=\"center\"\n      m=\"10px auto\"\n      borderRadius=\"10px\"\n      boxShadow=\"24px 20px 31px 0px rgba(242, 120, 147, 0.2)\"\n      lineHeight=\"1.8\"\n    >\n      <Flex as=\"div\" alignItems=\"center\" justifyContent=\"center\">\n        <Heading\n          as=\"h1\"\n          color=\"#D71868\"\n          fontSize=\"24px\"\n          fontFamily=\"Raleway, sans-serif\"\n          fontWeight=\"400\"\n          mr=\"15px\"\n        >\n          Phonebook\n        </Heading>\n        <AiOutlineApple color=\"#D71868\" fontSize=\"3em\" />\n      </Flex>\n      <ContactForm />\n      <Flex as=\"div\" alignItems=\"center\" justifyContent=\"center\">\n        <Heading\n          as=\"h2\"\n          color=\"#D71868\"\n          fontSize=\"24px\"\n          fontFamily=\"Raleway, sans-serif\"\n          fontWeight=\"400\"\n          mr=\"15px\"\n        >\n          Contacts\n        </Heading>\n        <AiOutlineUsergroupAdd color=\"#D71868\" fontSize=\"3em\" />\n      </Flex>\n      <Filter />\n      <ContactList />\n    </Box>\n  );\n}\n"],"names":["selectContacts","state","contacts","selectValueFilter","filter","Filter","useSelector","dispatch","useDispatch","as","color","fontSize","fontFamily","fontWeight","htmlFor","display","flexDirection","alignItems","I","name","type","id","value","onChange","e","onFilter","currentTarget","border","borderColor","borderRadius","bg","outline","w","nanoid","customAlphabet","schema","yup","shape","matches","required","number","initualValues","ContactForm","console","log","initialValues","validationSchema","onSubmit","values","resetForm","newContact","some","contact","alert","addContact","Form","gap","Field","component","pattern","title","Contact","onClick","deleteContact","m","ContactList","useEffect","fetchContacts","filteredContacts","toLowerCase","includes","trim","listStyleType","map","Contacts","h","p","textAlign","boxShadow","lineHeight","justifyContent","mr"],"sourceRoot":""}