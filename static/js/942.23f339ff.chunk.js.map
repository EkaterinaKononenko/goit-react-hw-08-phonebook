{"version":3,"file":"static/js/942.23f339ff.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.js","redux/contacts/selectors.js","components/Filter/Filter.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Contact/Contact.styled.js","components/Contact/Contact.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilterLable = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const FilterInput = styled.input`\n  border: ${props => props.theme.borders.light};\n  border-radius: ${props => props.theme.radii.light};\n  background: ${props => props.theme.colors.transparent};\n  color: ${props => props.theme.colors.border};\n  outline: none;\n  width: ${props => props.theme.space[8]}px;\n  &:hover,\n  &:focus {\n    border: ${props => props.theme.borders.heading};\n  }\n`;\n\nexport const FilterWrap = styled.div`\n  color: ${props => props.theme.colors.border};\n  font-size: ${props => props.theme.fontSizes[3]}px;\n  font-family: ${props => props.theme.fonts.body};\n  font-weight: ${props => props.theme.fontWeights.heading};\n`;\n\nexport const PhoneTitle = styled.h1`\nheading`;\n","//export const selectLoading = state => state.tasks.loading;\n\n//export const selectFilter = state => state.tasks.filter;\n\n//export const selectAllTasks = state => state.tasks.items;\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectValueFilter = state => state.contacts.filter;\n","import React from 'react';\nimport { FilterLable, FilterInput, FilterWrap } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { onFilter } from 'redux/contacts/slice';\nimport { selectValueFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const filter = useSelector(selectValueFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <FilterWrap>\n      <FilterLable htmlFor=\"filter\">Find contacts by name</FilterLable>\n      <FilterInput\n        name=\"filter\"\n        type=\"text\"\n        id=\"filter\"\n        value={filter}\n        onChange={e => dispatch(onFilter(e.currentTarget.value))}\n      />\n    </FilterWrap>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Input = styled(Field)`\n  border: ${props => props.theme.borders.light};\n  border-radius: ${props => props.theme.radii.light};\n  background: ${props => props.theme.colors.transparent};\n  color: ${props => props.theme.colors.border};\n  outline: none;\n  width: ${props => props.theme.space[8]}px;\n  &:hover,\n  &:focus {\n    border: ${props => props.theme.borders.heading};\n  }\n`;\n\nexport const FormReg = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: ${props => props.theme.space[2]}px; ;\n`;\n\nexport const LabelForm = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: ${props => props.theme.space[2]}px;\n  color: ${props => props.theme.colors.border};\n  font-size: ${props => props.theme.fontSizes[3]}px;\n  font-family: ${props => props.theme.fonts.body};\n  font-weight: ${props => props.theme.fontWeights.heading};\n`;\n\nexport const Error = styled(ErrorMessage)`\n  color: ${props => props.theme.colors.text};\n`;\n\nexport const BtnAddContact = styled.button`\n  border: ${props => props.theme.borders.light};\n  border-radius: ${props => props.theme.radii.light};\n  background: ${props => props.theme.colors.transparent};\n  color: ${props => props.theme.colors.border};\n  font-size: ${props => props.theme.fontSizes[3]}px;\n  font-family: ${props => props.theme.fonts.body};\n  font-weight: ${props => props.theme.fontWeights.body};\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { customAlphabet } from 'nanoid';\nimport {\n  Input,\n  FormReg,\n  LabelForm,\n  Error,\n  BtnAddContact,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst nanoid = customAlphabet('1234567890abcdef', 10);\n\nlet phoneRegExp =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\nlet nameRegExp = /[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      nameRegExp,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required(),\n  number: yup\n    .string()\n    .matches(\n      phoneRegExp,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n\nconst initualValues = {\n  id: '',\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n console.log(contacts);\n\n const handleSubmit = (values, { resetForm }) => {\n    const newContact = {\n      id: 'id-' + nanoid(),\n      name: values.name,\n      number: values.number,\n    };\n\n    if (contacts.some(contact => contact.name === newContact.name)) {\n      return alert(`Contact ${newContact.name} has already been registrated.`);\n    }\n    dispatch(addContact(newContact));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initualValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormReg>\n        <LabelForm htmlFor=\"name\">\n          Name\n          <Input type=\"text\" name=\"name\" id=\"name\" />\n          <Error name=\"name\" component=\"div\" />\n        </LabelForm>\n        <LabelForm htmlFor=\"number\">\n          Number\n          <Input\n            id=\"number\"\n            type=\"tel\"\n            name=\"number\"\n           pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          />\n          <Error name=\"number\" component=\"div\" />\n        </LabelForm>\n        <BtnAddContact type=\"submit\">Add contact</BtnAddContact>\n      </FormReg>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactText = styled.li`\n  color: ${props => props.theme.colors.border};\n  font-size: ${props => props.theme.fontSizes[3]}px;\n  font-family: ${props => props.theme.fonts.body};\n  font-weight: ${props => props.theme.fontWeights.body};\n`;\n\nexport const ContactButton = styled.button`\n  border: ${props => props.theme.borders.light};\n  border-radius: ${props => props.theme.radii.light};\n  background: ${props => props.theme.colors.transparent};\n  color: ${props => props.theme.colors.border};\n  margin: 0 auto;\n`;\n","import { ContactText, ContactButton } from './Contact.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  return (\n    <ContactText key={id}>\n      {name}:<span>{number}</span>\n      <ContactButton type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </ContactButton>\n    </ContactText>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactListWrap = styled.ul`\n  list-style: none;\n  align-items: center;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Contact } from 'components/Contact/Contact';\nimport { ContactListWrap } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectValueFilter, selectContacts } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectValueFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  console.log(contacts);\n\n  const filteredContacts = filter\n    ? contacts.filter(({ name }) =>\n        name.toLowerCase().includes(filter.toLowerCase().trim())\n      )\n    : contacts;\n\n  return (\n    <ContactListWrap>\n      {filteredContacts.map(({ id, name, number }) => {\n        return <Contact key={id} id={id} name={name} number={number} />;\n      })}\n    </ContactListWrap>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { Filter } from 'components/Filter';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { AiOutlineApple } from 'react-icons/ai';\nimport { AiOutlineUsergroupAdd } from 'react-icons/ai';\nimport { Box, Flex, Heading } from '@chakra-ui/react';\n\nexport default function Contacts() {\n  return (\n    <Box\n      as=\"div\"\n      w=\"512px\"\n      h=\"700px\"\n      bg=\"linear-gradient(45deg, #E28090, #FADADD, #FDBDBA)\"\n      p=\"16px\"\n      textAlign=\"center\"\n      m=\"10px auto\"\n      borderRadius=\"10px\"\n      boxShadow=\"24px 20px 31px 0px rgba(242, 120, 147, 0.2)\"\n      lineHeight=\"1.8\"\n    >\n      <Flex as=\"div\" alignItems=\"center\" justifyContent=\"center\">\n        <Heading\n          as=\"h1\"\n          color=\"#D71868\"\n          fontSize=\"24px\"\n          fontFamily=\"Raleway, sans-serif\"\n          fontWeight=\"400\"\n          mr=\"15px\"\n        >\n          Phonebook\n        </Heading>\n        <AiOutlineApple color=\"#D71868\" fontSize=\"3em\" />\n      </Flex>\n      <ContactForm />\n      <Flex as=\"div\" alignItems=\"center\" justifyContent=\"center\">\n        <Heading\n          as=\"h2\"\n          color=\"#D71868\"\n          fontSize=\"24px\"\n          fontFamily=\"Raleway, sans-serif\"\n          fontWeight=\"400\"\n          mr=\"15px\"\n        >\n          Contacts\n        </Heading>\n        <AiOutlineUsergroupAdd color=\"#D71868\" fontSize=\"3em\" />\n      </Flex>\n      <Filter />\n      <ContactList />\n    </Box>\n  );\n}\n"],"names":["FilterLable","styled","FilterInput","props","theme","borders","light","radii","colors","transparent","border","space","heading","FilterWrap","fontSizes","fonts","body","fontWeights","selectContacts","state","contacts","selectValueFilter","filter","Filter","useSelector","dispatch","useDispatch","htmlFor","name","type","id","value","onChange","e","onFilter","currentTarget","Input","Field","FormReg","Form","LabelForm","Error","ErrorMessage","text","BtnAddContact","nanoid","customAlphabet","schema","yup","shape","matches","required","number","initualValues","ContactForm","console","log","initialValues","validationSchema","onSubmit","values","resetForm","newContact","some","contact","alert","addContact","component","pattern","title","ContactText","ContactButton","Contact","onClick","deleteContact","ContactListWrap","ContactList","useEffect","fetchContacts","filteredContacts","toLowerCase","includes","trim","map","Contacts","as","w","h","bg","p","textAlign","m","borderRadius","boxShadow","lineHeight","alignItems","justifyContent","color","fontSize","fontFamily","fontWeight","mr"],"sourceRoot":""}