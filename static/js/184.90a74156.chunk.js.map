{"version":3,"file":"static/js/184.90a74156.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/operations.js","components/ContactForm/ContactForm.js","pages/Contacts.styled.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Input = styled(Field)`\n  border: ${props => props.theme.borders.light};\n  border-radius: ${props => props.theme.radii.light};\n  background: ${props => props.theme.colors.transparent};\n  color: ${props => props.theme.colors.border};\n  outline: none;\n  width: ${props => props.theme.space[8]}px;\n  &:hover,\n  &:focus {\n    border: ${props => props.theme.borders.heading};\n  }\n`;\n\nexport const FormReg = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: ${props => props.theme.space[2]}px; ;\n`;\n\nexport const LabelForm = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: ${props => props.theme.space[2]}px;\n  color: ${props => props.theme.colors.border};\n  font-size: ${props => props.theme.fontSizes[3]}px;\n  font-family: ${props => props.theme.fonts.body};\n  font-weight: ${props => props.theme.fontWeights.heading};\n`;\n\nexport const Error = styled(ErrorMessage)`\n  color: ${props => props.theme.colors.text};\n`;\n\nexport const BtnAddContact = styled.button`\n  border: ${props => props.theme.borders.light};\n  border-radius: ${props => props.theme.radii.light};\n  background: ${props => props.theme.colors.transparent};\n  color: ${props => props.theme.colors.border};\n  font-size: ${props => props.theme.fontSizes[3]}px;\n  font-family: ${props => props.theme.fonts.body};\n  font-weight: ${props => props.theme.fontWeights.body};\n`;\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, thunkAPI) => {\n    try {\n      const response = await axios.get('/contacts');\n      console.log(response.data);\n      return response.data;\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e.message);\n    }\n  }\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async ({ name, number }, thunkAPI) => {\n    try {\n      const response = await axios.post('/contacts', {\n        name,\n        number,\n      });\n      console.log(response.data);\n      return response.data;\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e.message);\n    }\n  }\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (id, thunkAPI) => {\n    try {\n      const response = await axios.delete(`/contacts/${id}`);\n      console.log(response.data);\n      return response.data;\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e.message);\n    }\n  }\n);\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { customAlphabet } from 'nanoid';\nimport {\n  Input,\n  FormReg,\n  LabelForm,\n  Error,\n  BtnAddContact,\n} from './ContactForm.styled';\n import { useDispatch } from 'react-redux';\n//import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n//import { selectContacts } from 'redux/contacts/selectors';\n\nconst nanoid = customAlphabet('1234567890abcdef', 10);\n\nlet phoneRegExp =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\nlet nameRegExp = /[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      nameRegExp,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required(),\n  number: yup\n    .string()\n    .matches(\n      phoneRegExp,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n\nconst initualValues = {\n  id: '',\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  //const contacts = useSelector(selectContacts);\n // console.log(contacts);\n\n const handleSubmit = (values, { resetForm }) => {\n    const newContact = {\n      id: 'id-' + nanoid(),\n      name: values.name,\n      number: values.number,\n    };\n\n    /*if (contacts.some(contact => contact.name === newContact.name)) {\n      return alert(`Contact ${newContact.name} has already been registrated.`);\n    }*/\n    dispatch(addContact(newContact));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initualValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormReg>\n        <LabelForm htmlFor=\"name\">\n          Name\n          <Input type=\"text\" name=\"name\" id=\"name\" />\n          <Error name=\"name\" component=\"div\" />\n        </LabelForm>\n        <LabelForm htmlFor=\"number\">\n          Number\n          <Input\n            id=\"number\"\n            type=\"tel\"\n            name=\"number\"\n           pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          />\n          <Error name=\"number\" component=\"div\" />\n        </LabelForm>\n        <BtnAddContact type=\"submit\">Add contact</BtnAddContact>\n      </FormReg>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: ${props => props.theme.space[9]}px;\n  height: ${props => props.theme.space[11]}px;\n  background: ${props => props.theme.colors.background};\n  padding: ${props => props.theme.space[4]}px;\n  text-align: center;\n  margin: 10px auto;\n  border-radius: ${props => props.theme.radii.heading};\n  box-shadow: ${props => props.theme.shadows.boxShadow};\n  line-height: 1.8;\n`;\n\nexport const PhoneTitle = styled.h1`\n  color: ${props => props.theme.colors.border};\n  font-size: ${props => props.theme.fontSizes[5]}px;\n  font-family: ${props => props.theme.fonts.body};\n  font-weight: ${props => props.theme.fontWeights.bold};\n  margin-right: 15px;\n`;\n\nexport const ContactTitle = styled.h2`\n  color: ${props => props.theme.colors.border};\n  font-size: ${props => props.theme.fontSizes[4]}px;\n  font-family: ${props => props.theme.fonts.body};\n  font-weight: ${props => props.theme.fontWeights.bold};\n  margin-right: 15px;\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","//import { Filter } from 'components/Filter';\nimport { ContactForm } from 'components/ContactForm';\n//import { ContactList } from 'components/ContactList';\nimport { Container, PhoneTitle, ContactTitle, IconWrapper } from './Contacts.styled';\nimport { AiOutlineApple } from 'react-icons/ai';\nimport { AiOutlineUsergroupAdd } from 'react-icons/ai';\n\nexport default function Contacts() {\n  return (\n    <Container>\n      <IconWrapper>\n        <PhoneTitle>Phonebook</PhoneTitle>\n        <AiOutlineApple color=\"#D71868\" fontSize=\"3em\" />\n      </IconWrapper>\n      <ContactForm />\n      <IconWrapper>\n        <ContactTitle>Contacts</ContactTitle>\n        <AiOutlineUsergroupAdd color=\"#D71868\" fontSize=\"3em\" />\n      </IconWrapper>\n      <div>Here will be markup</div>\n      <div>Here will be markup</div>\n    </Container>\n  );\n}\n\n/*return (\n    <Container>\n      <IconWrapper>\n        <PhoneTitle>Phonebook</PhoneTitle>\n        <AiOutlineApple color=\"#D71868\" fontSize=\"3em\" />\n      </IconWrapper>\n      <ContactForm />\n      <IconWrapper>\n        <ContactTitle>Contacts</ContactTitle>\n        <AiOutlineUsergroupAdd color=\"#D71868\" fontSize=\"3em\" />\n      </IconWrapper>\n      <Filter />\n      <ContactList />\n    </Container>\n  );*/"],"names":["Input","styled","Field","props","theme","borders","light","radii","colors","transparent","border","space","heading","FormReg","Form","LabelForm","fontSizes","fonts","body","fontWeights","Error","ErrorMessage","text","BtnAddContact","axios","createAsyncThunk","_","thunkAPI","response","console","log","data","rejectWithValue","message","addContact","name","number","id","nanoid","customAlphabet","schema","yup","shape","matches","required","initualValues","ContactForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","resetForm","newContact","htmlFor","type","component","pattern","title","Container","background","shadows","boxShadow","PhoneTitle","bold","ContactTitle","IconWrapper","Contacts","color","fontSize"],"sourceRoot":""}