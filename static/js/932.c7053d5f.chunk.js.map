{"version":3,"file":"static/js/932.c7053d5f.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Filter/Filter.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Contact/Contact.styled.js","components/Contact/Contact.js","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["//export const selectLoading = state => state.tasks.loading;\n\n//export const selectFilter = state => state.tasks.filter;\n\n//export const selectAllTasks = state => state.tasks.items;\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectValueFilter = state => state.contacts.filter;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { onFilter } from 'redux/contacts/slice';\nimport { selectValueFilter } from 'redux/contacts/selectors';\nimport { FormControl, FormLabel, Input } from '@chakra-ui/react';\n\nexport const Filter = () => {\n  const filter = useSelector(selectValueFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <FormControl\n      as=\"div\"\n      color=\"#D71868\"\n      fontSize=\"16px\"\n      fontFamily=\"Raleway, sans-serif\"\n      fontWeight=\"700\"\n    >\n      <FormLabel\n        as=\"div\"\n        htmlFor=\"filter\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        Find contacts by name\n      </FormLabel>\n      <Input\n        as=\"input\"\n        name=\"filter\"\n        type=\"text\"\n        id=\"filter\"\n        value={filter}\n        onChange={e => dispatch(onFilter(e.currentTarget.value))}\n        border=\"2px\"\n        borderColor=\"#FF9BAA\"\n        borderRadius=\"5px\"\n        bg=\"#FFCBDB\"\n        color=\"#D71868\"\n        outline=\"none\"\n        w=\"256px\"\n      />\n    </FormControl>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Input = styled(Field)`\n  border: ${props => props.theme.borders.light};\n  border-radius: ${props => props.theme.radii.light};\n  background: ${props => props.theme.colors.transparent};\n  color: ${props => props.theme.colors.border};\n  outline: none;\n  width: ${props => props.theme.space[8]}px;\n  &:hover,\n  &:focus {\n    border: ${props => props.theme.borders.heading};\n  }\n`;\n\nexport const FormReg = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: ${props => props.theme.space[2]}px; ;\n`;\n\nexport const LabelForm = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: ${props => props.theme.space[2]}px;\n  color: ${props => props.theme.colors.border};\n  font-size: ${props => props.theme.fontSizes[3]}px;\n  font-family: ${props => props.theme.fonts.body};\n  font-weight: ${props => props.theme.fontWeights.heading};\n`;\n\nexport const Error = styled(ErrorMessage)`\n  color: ${props => props.theme.colors.text};\n`;\n\nexport const BtnAddContact = styled.button`\n  border: ${props => props.theme.borders.light};\n  border-radius: ${props => props.theme.radii.light};\n  background: ${props => props.theme.colors.transparent};\n  color: ${props => props.theme.colors.border};\n  font-size: ${props => props.theme.fontSizes[3]}px;\n  font-family: ${props => props.theme.fonts.body};\n  font-weight: ${props => props.theme.fontWeights.body};\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { customAlphabet } from 'nanoid';\nimport {\n  Input,\n  FormReg,\n  LabelForm,\n  Error,\n  BtnAddContact,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst nanoid = customAlphabet('1234567890abcdef', 10);\n\nlet phoneRegExp =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\nlet nameRegExp = /[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      nameRegExp,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required(),\n  number: yup\n    .string()\n    .matches(\n      phoneRegExp,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n\nconst initualValues = {\n  id: '',\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n console.log(contacts);\n\n const handleSubmit = (values, { resetForm }) => {\n    const newContact = {\n      id: 'id-' + nanoid(),\n      name: values.name,\n      number: values.number,\n    };\n\n    if (contacts.some(contact => contact.name === newContact.name)) {\n      return alert(`Contact ${newContact.name} has already been registrated.`);\n    }\n    dispatch(addContact(newContact));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initualValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormReg>\n        <LabelForm htmlFor=\"name\">\n          Name\n          <Input type=\"text\" name=\"name\" id=\"name\" />\n          <Error name=\"name\" component=\"div\" />\n        </LabelForm>\n        <LabelForm htmlFor=\"number\">\n          Number\n          <Input\n            id=\"number\"\n            type=\"tel\"\n            name=\"number\"\n           pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          />\n          <Error name=\"number\" component=\"div\" />\n        </LabelForm>\n        <BtnAddContact type=\"submit\">Add contact</BtnAddContact>\n      </FormReg>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactText = styled.li`\n  color: ${props => props.theme.colors.border};\n  font-size: ${props => props.theme.fontSizes[3]}px;\n  font-family: ${props => props.theme.fonts.body};\n  font-weight: ${props => props.theme.fontWeights.body};\n`;\n\nexport const ContactButton = styled.button`\n  border: ${props => props.theme.borders.light};\n  border-radius: ${props => props.theme.radii.light};\n  background: ${props => props.theme.colors.transparent};\n  color: ${props => props.theme.colors.border};\n  margin: 0 auto;\n`;\n","import { ContactText, ContactButton } from './Contact.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  return (\n    <ContactText key={id}>\n      {name}:<span>{number}</span>\n      <ContactButton type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </ContactButton>\n    </ContactText>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Contact } from 'components/Contact/Contact';\nimport { Box } from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectValueFilter, selectContacts } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectValueFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  console.log(contacts);\n\n  const filteredContacts = filter\n    ? contacts.filter(({ name }) =>\n        name.toLowerCase().includes(filter.toLowerCase().trim())\n      )\n    : contacts;\n\n  return (\n    <Box as=\"ul\" alignItems=\"center\" listStyleType=\"none\">\n      {filteredContacts.map(({ id, name, number }) => {\n        return <Contact key={id} id={id} name={name} number={number} />;\n      })}\n    </Box>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { Filter } from 'components/Filter';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { AiOutlineApple } from 'react-icons/ai';\nimport { AiOutlineUsergroupAdd } from 'react-icons/ai';\nimport { Box, Flex, Heading } from '@chakra-ui/react';\n\nexport default function Contacts() {\n  return (\n    <Box\n      as=\"div\"\n      w=\"512px\"\n      h=\"700px\"\n      bg=\"linear-gradient(45deg, #E28090, #FADADD, #FDBDBA)\"\n      p=\"16px\"\n      textAlign=\"center\"\n      m=\"10px auto\"\n      borderRadius=\"10px\"\n      boxShadow=\"24px 20px 31px 0px rgba(242, 120, 147, 0.2)\"\n      lineHeight=\"1.8\"\n    >\n      <Flex as=\"div\" alignItems=\"center\" justifyContent=\"center\">\n        <Heading\n          as=\"h1\"\n          color=\"#D71868\"\n          fontSize=\"24px\"\n          fontFamily=\"Raleway, sans-serif\"\n          fontWeight=\"400\"\n          mr=\"15px\"\n        >\n          Phonebook\n        </Heading>\n        <AiOutlineApple color=\"#D71868\" fontSize=\"3em\" />\n      </Flex>\n      <ContactForm />\n      <Flex as=\"div\" alignItems=\"center\" justifyContent=\"center\">\n        <Heading\n          as=\"h2\"\n          color=\"#D71868\"\n          fontSize=\"24px\"\n          fontFamily=\"Raleway, sans-serif\"\n          fontWeight=\"400\"\n          mr=\"15px\"\n        >\n          Contacts\n        </Heading>\n        <AiOutlineUsergroupAdd color=\"#D71868\" fontSize=\"3em\" />\n      </Flex>\n      <Filter />\n      <ContactList />\n    </Box>\n  );\n}\n"],"names":["selectContacts","state","contacts","selectValueFilter","filter","Filter","useSelector","dispatch","useDispatch","as","color","fontSize","fontFamily","fontWeight","htmlFor","display","flexDirection","alignItems","I","name","type","id","value","onChange","e","onFilter","currentTarget","border","borderColor","borderRadius","bg","outline","w","Input","styled","Field","props","theme","borders","light","radii","colors","transparent","space","heading","FormReg","Form","LabelForm","fontSizes","fonts","body","fontWeights","Error","ErrorMessage","text","BtnAddContact","nanoid","customAlphabet","schema","yup","shape","matches","required","number","initualValues","ContactForm","console","log","initialValues","validationSchema","onSubmit","values","resetForm","newContact","some","contact","alert","addContact","component","pattern","title","ContactText","ContactButton","Contact","onClick","deleteContact","ContactList","useEffect","fetchContacts","filteredContacts","toLowerCase","includes","trim","listStyleType","map","Contacts","h","p","textAlign","m","boxShadow","lineHeight","justifyContent","mr"],"sourceRoot":""}